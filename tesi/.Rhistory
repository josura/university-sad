daticov <- read.csv(file = "COVID-19/dati-andamento-nazionale/dpc-covid19-ita-andamento-nazionale-20200224.csv")
daticov
daticov
daticov <- read.csv(file = "COVID-19/dati-andamento-nazionale/dpc-covid19-ita-andamento-nazionale.csv")
daticov
plot(daticov,x=data,y=totale_attualmente_positivi)
install.packages("ggplot")
install.packages("ggplot2")
library(ggplot2)
tutplot <- ggplot() + geom_histogram(data = daticov,aes(x=data,y=totale_attualmente_positivi))
tutplot
rlang::last_error()
datichemiserv <- daticov[,c(1,7)]
datichemiserv
tutplot <- ggplot() + geom_histogram(data = datichemiserv,aes(x=data,y=totale_attualmente_positivi))
tutplot
tutplot <- ggplot(data = datichemiserv,aes(x=data,y=totale_attualmente_positivi)) + geom_histogram()
tutplot
tutplot <- ggplot(datichemiserv,aes(x=data)) + geom_histogram()
tutplot
`rlang::last_error()`
rlang::last_error()
datichemiserv[,1] <- c(1:nrow(datichemiserv))
datichemiserv
tutplot <- ggplot(datichemiserv,aes(x=data)) + geom_histogram()
tutplot
tutplot <- ggplot(datichemiserv,aes(x=data,y=totale_attualmente_positivi)) + geom_histogram()
tutplot
tutplot <- ggplot(datichemiserv,aes(x=data)) + geom_histogram(y=totale_attualmente_positivi)
tutplot <- ggplot(datichemiserv,aes(data,totale_attualmente_positivi)) + geom_bar(stat = =totale_attualmente_positivi)
tutplot <- ggplot(datichemiserv,aes(data,totale_attualmente_positivi)) + geom_bar(stat = totale_attualmente_positivi)
tutplot <- ggplot(datichemiserv,aes(data,totale_attualmente_positivi)) + geom_bar(stat = "totale_attualmente_positivi")
tutplot <- ggplot(datichemiserv,aes(data,totale_attualmente_positivi)) + geom_bar(stat = "identity")
tutplot
library(MASS)
fitdistr(datichemiserv[,2],densfun = "exponential")
parametricov <- fitdistr(datichemiserv[,2],densfun = "exponential")
parametricov[1]
parametricov[2]
tutplot
espfun <- function(x) parametricov[2]*(x^parametricov[1])
espfun(3)
class(parametricov)
parametricov$estimate
parametricov$sd
espfun <- function(x) (x^parametricov$estimate)
espfun(3)
tutplot + stat_function(fun = espfun)
tutplot + stat_function(fun = espfun) + xlim(0,30)
fitdistr(datichemiserv[,2],densfun = "exponential")
fitdistr(datichemiserv[,1],densfun = "exponential")
c(1,2,4,8,16,32,64,128,256,512)
fitdistr(c(1,2,4,8,16,32,64,128,256,512),densfun = "exponential")
tutplot  + xlim(0,30)
dexp(x,parametricov$estimate)
dexp(x,rate = parametricov$estimate)
curve(dexp(x,rate = parametricov$estimate))
curve(dexp(x,rate = parametricov$estimate[1]))
curve(dexp(x,rate = parametricov$estimate[2]))
curve(dexp(x,rate = parametricov$estimate[1]))
curve(dexp(x,rate = parametricov$estimate[))
curve(dexp(x,rate = parametricov$estimate))
lm(formula = log(datichemiserv$totale_attualmente_positivi) ~ datichemiserv$data)
fitexp <- lm(formula = log(datichemiserv$totale_attualmente_positivi) ~ datichemiserv$data)
fitexp
fitexp <- lm(formula = datichemiserv$totale_attualmente_positivi ~ alpha * I(datichemiserv$data ^ beta))
fitexp <- lm(formula = datichemiserv$totale_attualmente_positivi ~ alpha * pow(datichemiserv$data, beta))
expfun <- function(x,alpha,beta) alpha * (x*beta)
expfun(1,2,2)
expfun <- function(x,alpha,beta) alpha * (x^beta)
expfun(1,2,2)
expfun(2,2,2)
nlm(datichemiserv$totale_attualmente_positivi ~ expfun(datichemiserv$data,alpha,beta))
lm(datichemiserv$totale_attualmente_positivi ~ expfun(datichemiserv$data,alpha,beta))
datichemiserv$data
class(datichemiserv$data)
nls(formula =datichemiserv$totale_attualmente_positivi ~ alp(datichemiserv$data^bet),data = datichemiserv )
nls(formula =datichemiserv$totale_attualmente_positivi ~ alp*(datichemiserv$data^bet),data = datichemiserv )
fit(datichemiserv$data,datichemiserv$totale_attualmente_positivi,alp*(datichemiserv$data^bet) )
lm(formula =datichemiserv$totale_attualmente_positivi ~ alp*(datichemiserv$data^bet),data = datichemiserv )
nlm(formula =datichemiserv$totale_attualmente_positivi ~ alp*(datichemiserv$data^bet),data = datichemiserv )
?nlm
nlm(formula =datichemiserv$totale_attualmente_positivi ~ alp*(datichemiserv$data^bet),data = datichemiserv , p = c(10,10))
nlm(f = datichemiserv$totale_attualmente_positivi ~ alp*(datichemiserv$data^bet),data = datichemiserv , p = c(10,10))
nlm(f = expfun, p = c(10,10))
fitModel
install.packages("mosaic")
library(mosaicCore)
library(mosaicData)
fitModel
glm(formula =datichemiserv$totale_attualmente_positivi ~ alp*(datichemiserv$data^bet),data = datichemiserv
)
nls(datichemiserv$totale_attualmente_positivi ~ alp*(datichemiserv$data^bet),start = list(alp=0,bet=0), data = datichemiserv )
nls(totale_attualmente_positivi ~ alp*(data^bet),start = list(alp=0,bet=0), data = datichemiserv )
nls(totale_attualmente_positivi ~ alp*(data^bet),start = list(alp=1,bet=0), data = datichemiserv )
nls(totale_attualmente_positivi ~ alp*(data^bet),start = list(alp=1,bet=1), data = datichemiserv )
nls(totale_attualmente_positivi ~ alp*(data^bet),start = list(alp=0.01,bet=0.01), data = datichemiserv )
install.packages("minpack.lm")
library(minpack.lm)
install.packages("minpack.lm")
install.packages("minpack.lm")
library(minpack.lm)
nlsLM(totale_attualmente_positivi ~ alp*(data^bet),start = list(alp=0.01,bet=0.01), data = datichemiserv )
fitexp <- nlsLM(totale_attualmente_positivi ~ alp*(data^bet),start = list(alp=0.01,bet=0.01), data = datichemiserv )
fitexp$data
fitexp$control
fitexp
fitexp$convInfo
fitexp$m
fitexp$call
fitexp
fitexp$data
fitexp$control
coef(fitexp)
coeffi_pow <- coef(fitexp)
tutplot  + xlim(0,30)
tutplot  + stat_function(fun = function(x) coeffi_pow[1]*(x^coeffi_pow[2]) ) + xlim(0,30)
fitexp1 <- nlsLM(totale_attualmente_positivi ~(1+ alp*data)^bet,start = list(alp=0.01,bet=0.01), data = datichemiserv )
coeffi_pow1 <- coef(fitexp1)
par(mfrow=c(1,2))
tutplot  + stat_function(fun = function(x) (1+coeffi_pow1[1]*x)^coeffi_pow1[2] ) + xlim(0,30)
par(mfrow=c(1,2))
tutplot  + stat_function(fun = function(x) coeffi_pow[1]*(x^coeffi_pow[2]) ) + xlim(0,30)
tutplot  + stat_function(fun = function(x) (1+coeffi_pow1[1]*x)^coeffi_pow1[2] ) + xlim(0,30)
remove.packages("mosaics")
remove.packages("mosaic")
remove.packages("mosaicData")
remove.packages("mosaicCore")
