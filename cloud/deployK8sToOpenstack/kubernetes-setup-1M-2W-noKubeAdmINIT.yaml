---
# apply these steps on Manager as well as workers
- hosts: allservers
  tasks:
    - name: ensure sudo is installed
      apt:
       name: sudo
    - name: restore original debian repository
      become: yes
      shell: sudo cp /usr/share/doc/apt/examples/sources.list /etc/apt/sources.list
    - name: Run the equivalent of "apt-get update" as a separate step
      become: yes
      become_method: sudo
      apt:
        update_cache: yes
    - name: apt install ca-certificates
      become: yes
      become_method: sudo
      apt:
        pkg: ca-certificates
    - name: apt install curl
      become: yes
      become_method: sudo
      apt:
        pkg: curl
    - name: apt install gnupg
      become: yes
      become_method: sudo
      apt:
        pkg: gnupg
    - name: install keyrings
      become: yes
      become_method: sudo
      shell: sudo install -m 0755 -d /etc/apt/keyrings
    - name: Curl docker gpg key and dearmor it
      become: yes
      become_method: sudo
      shell: curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor --batch --yes -o /etc/apt/keyrings/docker.gpg

    - name: change file permission
      become: yes
      become_method: sudo
      shell: sudo chmod a+r /etc/apt/keyrings/docker.gpg

    - name: Set up the repository
      become: yes
      become_method: sudo
      shell: echo "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
    - name: apt-get update to get docker registry
      become: yes
      become_method: sudo
      apt:
        update_cache: yes
    - name: apt-get packages for kubernetes repository
      become: yes
      become_method: sudo
      shell: sudo apt-get install -y apt-transport-https ca-certificates curl
    - name: Download the Google Cloud public signing key
      become: yes
      become_method: sudo
      shell: sudo curl -fsSLo /etc/apt/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
    - name: Add the Kubernetes apt repository
      become: yes
      become_method: sudo
      shell: echo "deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list 
    - name: apt-get update to get kubernetes registry
      become: yes
      become_method: sudo
      apt:
        update_cache: yes
    - name: install docker, kubelet, kubeadm and kubectl packages
      become: yes
      become_method: sudo
      command: apt-get install -y --allow-change-held-packages docker-ce kubelet kubeadm kubectl
    - name: hold docker, kubelet, kubeadm and kubectl to current versions
      become: yes
      become_method: sudo
      command: apt-mark hold docker-ce kubelet kubeadm kubectl
    - name: create k8s.conf for iptables
      become: yes
      become_method: sudo
      command: printf "overlay\nbr_netfilter\n" | sudo tee /etc/modules-load.d/k8s.conf
    - name: modprobe overlay and br_netfilter
      become: yes
      become_method: sudo
      command: modprobe -a overlay br_netfilter
    - name: create k8s.conf for iptables
      become: yes
      become_method: sudo
      command: printf "net.bridge.bridge-nf-call-iptables  = 1\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.ipv4.ip_forward                 = 1\n" | sudo tee /etc/sysctl.d/k8s.conf
    - name: apply sysctl params
      become: yes
      become_method: sudo
      command: sysctl --system
    - name: disable swap 1             
      become: yes
      become_method: sudo
      command: swapoff -a
    - name: add libseccomp repository             
      become: yes
      become_method: sudo
      command: echo 'deb http://deb.debian.org/debian buster-backports main' > /etc/apt/sources.list.d/backports.list
    - name: apt-get update to get libseccomp registry
      become: yes
      become_method: sudo
      apt:
        update_cache: yes
    - name: install libseccomp2             
      become: yes
      become_method: sudo
      command: apt install -y libseccomp2 
    - name: add libcontainer repository             
      become: yes
      become_method: sudo
      shell: printf "deb [signed-by=/usr/share/keyrings/libcontainers-archive-keyring.gpg] https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/Debian_11/ /\n" | sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list
    - name: add cri-o repository             
      become: yes
      become_method: sudo
      shell: printf "deb [signed-by=/usr/share/keyrings/libcontainers-crio-archive-keyring.gpg] https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/1.24/Debian_11/ /" | sudo tee  /etc/apt/sources.list.d/devel:kubic:libcontainers:stable:cri-o:1.24.list
    - name: create directory for keyrings if not available
      become: yes
      become_method: sudo
      command: mkdir -p /usr/share/keyrings
    - name: Curl libcontainer gpg key and dearmor it
      become: yes
      become_method: sudo
      shell: curl -L https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/Debian_11/Release.key | sudo gpg --dearmor --batch --yes -o /usr/share/keyrings/libcontainers-archive-keyring.gpg
    - name: Curl libcontainer-crio gpg key and dearmor it
      become: yes
      become_method: sudo
      shell: curl -L https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/1.24/Debian_11/Release.key | sudo gpg --dearmor --batch --yes -o /usr/share/keyrings/libcontainers-crio-archive-keyring.gpg
    - name: apt-get update to get crio registry
      become: yes
      become_method: sudo
      apt:
        update_cache: yes
    - name: install cri-o and cri-o-runc
      become: yes
      become_method: sudo
      command: apt-get install cri-o cri-o-runc cri-tools
    - name: Just force systemd to reread configs (2.4 and above)
      become: yes
      ansible.builtin.systemd:
        daemon_reload: true
    - name: Enable crio
      become: yes
      ansible.builtin.systemd:
        name: crio
        state: started
        enabled: true
    # add node to kubelet extra args
    - name: write to default/kubelet file
      become: yes
      shell: printf "KUBELET_EXTRA_ARGS=--node-ip=$(ip -o route get to 8.8.8.8 | sed -n 's/.*src \([0-9.]\+\).*/\1/p')" > /etc/default/kubelet
