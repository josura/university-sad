---
# apply these steps on Manager as well as workers
- hosts: allservers
  tasks: 
    - name: ensure sudo is installed
      apt:
       name: sudo
    - name: restore original debian repository
      become: yes
      shell: sudo cp /usr/share/doc/apt/examples/sources.list /etc/apt/sources.list
    - name: Run the equivalent of "apt-get update" as a separate step
      become: yes
      become_method: sudo
      apt:
        update_cache: yes
    - name: apt install ca-certificates
      become: yes
      become_method: sudo
      apt:
        pkg: ca-certificates 
    - name: apt install curl
      become: yes
      become_method: sudo
      apt:
        pkg: curl 
    - name: apt install gnupg
      become: yes
      become_method: sudo
      apt:
        pkg: gnupg
    - name: Download apt key
      get_url:
        url: https://download.docker.com/linux/debian/gpg
        dest: /tmp # or /etc/pki/rpm-gpg depending on the infrastructure
    - name: Add a key from a file
      become: yes
      become_method: sudo
      ansible.builtin.apt_key:
        file: /tmp/gpg
        state: present
    #- name: Add docker official GPG key
     # become: yes
     # become_method: sudo
     # shell: sudo install -m 0755 -d /etc/apt/keyrings &&  curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg && sudo chmod a+r /etc/apt/keyrings/docker.gpg
    #- name: Set up the repository
     # become: yes
     # become_method: sudo
     # shell: echo "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null  
  #  - name: download dependency to get add-apt-repository
  #    become: yes
  #    become_method: sudo
  #    apt:
  #      pkg: software-properties-common
  #  - name: add repository
  #    become: yes
  #    become_method: sudo	
  #    shell: add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
    - name: apt-get update to get docker registry
      become: yes
      become_method: sudo
      apt:
        update_cache: yes
    - name: Add the Kubernetes gpg key
      become: yes
      become_method: sudo
      shell: curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
    - name: Add the Kubernetes Registry
      become: yes
      become_method: sudo
      shell: echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | tee /etc/apt/sources.list.d/kubernetes.list
    - name: Update packages
      become: yes
      become_method: sudo
      command: apt-get update
    - name: install docker, kubelet, kubeadm and kubectl packages
      become: yes
      become_method: sudo
      command: apt-get install -y docker-ce=18.06.1~ce~3-0~ubuntu kubelet=1.15.7-00 kubeadm=1.15.7-00 kubectl=1.15.7-00
    - name: hold docker, kubelet, kubeadm and kubectl to current versions
      become: yes
      become_method: sudo
      command: apt-mark hold docker-ce kubelet kubeadm kubectl
    - name: Add the iptables rule to sysctl.conf
      become: yes
      become_method: sudo
      shell: echo "net.bridge.bridge-nf-call-iptables=1" | sudo tee -a /etc/sysctl.conf
    - name: Enable iptables immediately
      become: yes
      become_method: sudo
      command: sysctl -p
# apply the following steps on Manager only
- hosts: Masters
  tasks: 
    - name: Initialize the cluster 
      become: yes
      become_method: sudo
      shell: kubeadm init --pod-network-cidr=10.244.0.0/16 > cluster-init-logs.txt
      register: kubeadm_init_output
    - name: Sleep for 20 seconds
      shell: sleep 20
    - name: Copy the join command to cluster-join.txt
      shell: tail -n 2 cluster-init-logs.txt > cluster-join.txt
    - name: Kubeadm init output
      debug:
        var: kubeadm_init_output
    - name: Set up local kubeconfig - create directory
      # create directory for current user kubeconfig files
      file:
        path: /home/ubuntu/.kube
        state: directory
    - name: Set up local kubeconfig - copy config files and change permissions
      become: yes
      become_method: sudo
      copy:
        remote_src: yes
        src: /etc/kubernetes/admin.conf
        dest: /home/ubuntu/.kube/config
        owner: ubuntu
        group: ubuntu
    - name: Apply Flannel CNI network overlay
      become: yes
      become_method: sudo
      command: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml

