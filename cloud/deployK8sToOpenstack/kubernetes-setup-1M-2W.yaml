---
# apply these steps on Manager as well as workers
- hosts: allservers
  tasks:
    - name: ensure sudo is installed
      apt:
       name: sudo
    - name: restore original debian repository
      become: yes
      shell: sudo cp /usr/share/doc/apt/examples/sources.list /etc/apt/sources.list
    - name: Run the equivalent of "apt-get update" as a separate step
      become: yes
      become_method: sudo
      apt:
        update_cache: yes
    - name: apt install ca-certificates
      become: yes
      become_method: sudo
      apt:
        pkg: ca-certificates
    - name: apt install curl
      become: yes
      become_method: sudo
      apt:
        pkg: curl
    - name: apt install gnupg
      become: yes
      become_method: sudo
      apt:
        pkg: gnupg
    - name: install keyrings
      become: yes
      become_method: sudo
      shell: sudo install -m 0755 -d /etc/apt/keyrings
    - name: Curl docker gpg key and dearmor it
      become: yes
      become_method: sudo
      shell: curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor --batch --yes -o /etc/apt/keyrings/docker.gpg

    - name: change file permission
      become: yes
      become_method: sudo
      shell: sudo chmod a+r /etc/apt/keyrings/docker.gpg

    - name: Set up the repository
      become: yes
      become_method: sudo
      shell: echo "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
    - name: apt-get update to get docker registry
      become: yes
      become_method: sudo
      apt:
        update_cache: yes
    - name: apt-get packages for kubernetes repository
      become: yes
      become_method: sudo
      shell: sudo apt-get install -y apt-transport-https ca-certificates curl
    - name: Download the Google Cloud public signing key
      become: yes
      become_method: sudo
      shell: sudo curl -fsSLo /etc/apt/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
    - name: Add the Kubernetes apt repository
      become: yes
      become_method: sudo
      shell: echo "deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list 
    - name: apt-get update to get kubernetes registry
      become: yes
      become_method: sudo
      apt:
        update_cache: yes
    - name: install docker, kubelet, kubeadm and kubectl packages
      become: yes
      become_method: sudo
      command: apt-get install -y --allow-change-held-packages docker-ce kubelet kubeadm kubectl
    - name: hold docker, kubelet, kubeadm and kubectl to current versions
      become: yes
      become_method: sudo
      command: apt-mark hold docker-ce kubelet kubeadm kubectl
  #  - name: Add the iptables rule to sysctl.conf
  #    become: yes
  #    become_method: sudo
  #    shell: echo "net.bridge.bridge-nf-call-iptables=1" | sudo tee -a /etc/sysctl.conf
  #  - name: Enable iptables immediately
  #    become: yes
  #    become_method: sudo
  #    command: sysctl -p
    - name: create k8s.conf for iptables
      become: yes
      become_method: sudo
      command: printf "overlay\nbr_netfilter\n" | sudo tee /etc/modules-load.d/k8s.conf
    - name: modprobe overlay and br_netfilter
      become: yes
      become_method: sudo
      command: modprobe -a overlay br_netfilter
    - name: create k8s.conf for iptables
      become: yes
      become_method: sudo
      command: printf "net.bridge.bridge-nf-call-iptables  = 1\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.ipv4.ip_forward                 = 1\n" | sudo tee /etc/sysctl.d/k8s.conf
    - name: apply sysctl params
      become: yes
      become_method: sudo
      command: sysctl --system
    - name: disable swap 1             
      become: yes
      become_method: sudo
      command: swapoff -a
        #  - name: disable swap 2             
        #    become: yes
        #    become_method: sudo
        #    command: (crontab -l 2>/dev/null; echo "@reboot /sbin/swapoff -a") | crontab - || true
# apply the following steps on Manager only
- hosts: Masters
  tasks: 
    - name: Initialize the cluster 
      become: yes
      become_method: sudo
      shell: kubeadm init --pod-network-cidr=10.244.0.0/16 > cluster-init-logs.txt
      register: kubeadm_init_output
    - name: Sleep for 20 seconds
      shell: sleep 20
    - name: Copy the join command to cluster-join.txt
      shell: tail -n 2 cluster-init-logs.txt > cluster-join.txt
    - name: Kubeadm init output
      debug:
        var: kubeadm_init_output
    - name: Set up local kubeconfig - create directory
      # create directory for current user kubeconfig files
      file:
        path: /home/ubuntu/.kube
        state: directory
    - name: Set up local kubeconfig - copy config files and change permissions
      become: yes
      become_method: sudo
      copy:
        remote_src: yes
        src: /etc/kubernetes/admin.conf
        dest: /home/ubuntu/.kube/config
        owner: ubuntu
        group: ubuntu
    - name: Apply Flannel CNI network overlay
      become: yes
      become_method: sudo
      command: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml

